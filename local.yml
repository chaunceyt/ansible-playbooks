---
- hosts: localhost
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes

  vars:
    - drush_update_packages: no

  tasks:
  - debug: var=ansible_distribution

  - name: get ec2 facts
    ec2_facts:

  - debug: var=ansible_ec2_instance_id
  - debug: var=ansible_ec2_instance_type
  - debug: var=ansible_ec2_public_hostname

  - name: check if EPEL is installed
    shell: /usr/bin/rpmquery epel-release
    register: epel_installed
    ignore_errors: true
    changed_when: false

  - name: clean yum metadata on first run
    shell: /usr/bin/yum clean all
    when: epel_installed|failed

  - name: upgrade all packages on first run
    yum:
      name: '*'
      state: latest
    when: epel_installed|failed

  - include: Amazon.yml
    when: ansible_distribution == 'Amazon'

  - include: Redhat.yml
    when: ansible_distribution == 'RedHat'

  - name: Copy httpd.conf
    template: src=templates/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf

  - name: Start and enable Apache
    service: name=httpd state=started enabled=yes

  - name: checking if /usr/local/bin/composer exists
    stat: path=/usr/local/bin/composer
    register: composer

  - name: Ensuring /usr/local/composer exists
    file: path=/usr/local/composer state=directory mode=0755

  - name: Checking if /usr/local/composer/vendor/bin/drush exists
    stat: path=/usr/local/composer/vendor/bin/drush
    register: drush
  - name: Grab Composer
    get_url: url=https://getcomposer.org/download/1.2.0/composer.phar dest=/tmp/
    when: composer.stat.exists == False

  - name: Install Composer
    shell: mv /tmp/composer.phar /usr/local/bin/composer; chmod +x /usr/local/bin/composer
    when: composer.stat.exists == False

  - name: Installing Drush
    shell: export COMPOSER_HOME=/root && /usr/local/bin/composer -d=/usr/local/composer global require drush/drush:6.4.0
    when: drush.stat.exists == False

  - name: Updating composer components
    shell: /usr/local/bin/composer -d=/usr/local/composer global update
    when: drush_update_packages

  - name: Create /opt/drush
    file: path=/opt/drush state=directory mode=0755

  - name: Create symlink for drush under /opt/drush
    file: src=/usr/local/composer/vendor/bin/drush dest=/opt/drush/drush owner=root group=root state=link

  - name: Create symlink for drush under /usr/local/bin
    file: src=/opt/drush/drush dest=/usr/local/bin/drush owner=root group=root state=link

  - name: Make seleniumhub directory /opt/seleniumhub
    file: path=/opt/seleniumhub state=directory mode=0755 owner=root group=root

  - name: Copy in docker-compose.yml /opt/seleniumhub
    template: src=templates/docker-compose.yml.j2 dest=/opt/seleniumhub/docker-compose.yml

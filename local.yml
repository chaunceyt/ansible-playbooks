---
- hosts: localhost
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes

  vars:
    - drush_update_packages: no

  tasks:
  - debug: var=ansible_distribution

  - name: get ec2 facts
    ec2_facts:

  - debug: var=ansible_ec2_instance_id
  - debug: var=ansible_ec2_instance_type
  - debug: var=ansible_ec2_public_hostname

  - name: check if EPEL is installed
    shell: /usr/bin/rpmquery epel-release
    register: epel_installed
    ignore_errors: true
    changed_when: false

  - name: clean yum metadata on first run
    shell: /usr/bin/yum clean all
    when: epel_installed|failed

  - name: upgrade all packages on first run
    yum:
      name: '*'
      state: latest
    when: epel_installed|failed

  - include: playbooks/Amazon.yml
    when: ansible_distribution == 'Amazon'

  - include: playbooks/RedHat.yml
    when: ansible_distribution == 'RedHat'

  - name: Copy httpd.conf
    template: src=templates/httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf

  - name: Start and enable Apache
    service: name=httpd state=started enabled=yes

  - include: playbooks/install-composer.yml
  - include: playbooks/install-drush.yml

  - block:
      - name: Check for swap file of t2.micro
        stat: path=/var/swap.1
        register: swap_file

      - include: playbooks/create-swap.yml
        when: swap_file.stat.exists == False

      - name: Enable Swap if we do not have a /var/swap.1
        command: /tmp/setup-swap.sh
        args:
          creates: /var/swap.1
        when: swap_file.stat.exists == False
    when: ansible_ec2_instance_type == "t2.micro"
